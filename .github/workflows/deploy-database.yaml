name: Deploy Database

on:
  workflow_call:
    inputs:
      database:
        description: 'Database name to be created if it does not exist'
        required: true
        type: string
    secrets:
      kubeconfig:
        description: 'Kubeconfig file in base64'
        required: true
      postgres_user:
        description: 'Postgres user'
        required: true
      postgres_password:
        description: 'Postgres password'
        required: true

jobs:
  apply_k8s_manifests:
    name: Apply Kubernetes Manifests
    runs-on: ubuntu-latest

    steps:
      - name: Install kubectl
        uses: Azure/setup-kubectl@v4
        with:
          version: 'v1.30.0'

      - name: Configure kubectl
        run: |
          mkdir -p ~/.kube
          echo "${{ secrets.kube_config }}" | base64 --decode > ~/.kube/config

      - name: Get database k8s files
        run: |
          git clone https://github.com/Rutger505/kubernetes-infra.git
          ls -al

      - name: Insert database name into Kubernetes files
        run: |
          export DATABASE_NAME="${{ inputs.database }}"
          FILE=k8s/deployment.yaml
          
          envsubst < $FILE > /tmp/envsubst || exit 1
          
          mv /tmp/envsubst $FILE || exit 1

      - name: Apply Kubernetes manifests
        run: |
          secret_name=postgres-secret
          
          if kubectl get secret $secret_name; then
            echo "Secret '$secret_name' already exists, skipping creation."
          else
            kubectl create secret generic $secret_name \
              --from-literal=POSTGRES_USER=${{ secrets.POSTGRES_USER }} \
              --from-literal=POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}
            echo "Secret '$secret_name' created."
          fi
          
          kubectl apply -f k8s/
