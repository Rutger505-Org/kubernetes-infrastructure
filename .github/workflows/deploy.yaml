name: Deploy

on:
  push:
    tags:
      - '*'

jobs:
  deploy-postgres-to-kubernetes:
    name: Deploy to Kubernetes
    runs-on: ubuntu-latest

    env:
      ENVIRONMENT: ${{ vars.ENVIRONMENT }}
      NAMESPACE: postgres-${{ vars.ENVIRONMENT }}

    steps:
      - uses: actions/checkout@v4

      - name: Install envsubst
        run: sudo apt-get update && sudo apt-get install -y gettext-base

      - uses: azure/setup-kubectl@v4
        with:
          version: 'v1.31.0'

      - name: Kubernetes Set Context
        uses: Azure/k8s-set-context@v4.0.1
        with:
          method: kubeconfig
          kubeconfig: ${{ secrets.KUBECONFIG }}

      - name: Install yq
        uses: Makepad-fr/setup-yq-action@v1.0.0
        with:
          version: "4.44.2"

      - name: Insert environment variables into Kubernetes files
        run: |
          FILES=$(ls postgres/deploy/*.yaml | tr '\n' ' ')
          
          for FILE in $FILES; do
            echo "Processing $FILE"
          
            envsubst < $FILE > /tmp/envsubst || exit 1
          
            mv /tmp/envsubst $FILE || exit 1
          done
        env:
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          TAG_NAME: ${{ github.ref_name }}

      - name: Check if secret already exists
        run: |
          if [ -f postgres/deploy/secret.yaml ]; then
            SECRET_NAME=$(yq '.metadata.name' postgres/deploy/secret.yaml)
            SECRET_NAMESPACE=$(yq '.metadata.namespace' postgres/deploy/secret.yaml)

            if kubectl get secret $SECRET_NAME -n $SECRET_NAMESPACE 2>&1 | grep -q "not found"; then
              echo "Secret $SECRET_NAME does not exist in namespace $SECRET_NAMESPACE, leaving file for deploy step"
            else
              echo "Secret $SECRET_NAME already exists in namespace $SECRET_NAMESPACE, removing file"
              rm postgres/deploy/secret.yaml
            fi
          fi

      - name: Create namespace if not exists
        run: |
          if ! kubectl get namespace $NAMESPACE &> /dev/null; then
            echo "Namespace $NAMESPACE does not exist, creating it"
            kubectl create namespace $NAMESPACE
          else
            echo "Namespace $NAMESPACE already exists"
          fi

      - name: Deploy to Kubernetes
        uses: Azure/k8s-deploy@v5
        with:
          namespace: ${{ env.NAMESPACE }}
          manifests: |
            postgres/deploy/
