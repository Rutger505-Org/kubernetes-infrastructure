name: Deploy to Kubernetes

on:
  workflow_call:
    inputs:
      dockerhub_username:
        description: 'Docker Hub Username'
        required: true
        type: string
      image_name:
        description: 'Docker image with tag'
        required: true
        type: string
      deployment_name:
        description: 'Kubernetes deployment name to restart'
        required: true
        type: string
      configmap_name:
        description: 'Kubernetes configmap name'
        required: true
        type: string
      configmap_literals:
        description: 'ConfigMap key-value pairs in "key=value" format, separated by commas'
        required: true
        type: string
      secret_name:
        description: 'Kubernetes secret name'
        required: true
        type: string
    secrets:
      kube_config:
        description: 'Kubeconfig file'
        required: true
      dockerhub_token:
        description: 'Docker Hub Token'
        required: true
      secret_literals:
        description: 'Secret key-value pairs in "key=value" format, separated by commas'
        required: true

jobs:
#  build-docker-image:
#    name: Build and push Docker image
#    runs-on: ubuntu-latest
#
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v4
#
#      - name: Login to Docker Hub
#        uses: docker/login-action@v3
#        with:
#          username: ${{ inputs.dockerhub_username }}
#          password: ${{ secrets.dockerhub_token }}
#
#      - name: Build and push Docker image
#        uses: docker/build-push-action@v6
#        with:
#          context: .
#          tags: ${{ inputs.image_name }}
#          push: true

  deploy:
    name: Deploy to Kubernetes
    runs-on: ubuntu-latest
#    needs: build-docker-image

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Perhaps azure/setup-kubectl@v6 is necessary
      - name: Setup kubectl
        uses: actions-hub/kubectl@master
        env:
          KUBE_CONFIG: ${{ secrets.kube_config }}

      - name: Get Kubernetes files
        run: |
          {
            echo "kubernetes_files<<EOF"
            ls k8s/*.yaml
            echo "EOF"
          } >> "$GITHUB_ENV"
          echo ${{ env.kubernetes_files }}

      - name: Insert environment variables into Kubernetes files
        uses: DominicWatson/github-action-envsubst@v1
        with:
          files: ${{ env.kubernetes_files }}
        env:
          # TODO get k8s files environment replace
          TAG_NAME: 1.1.2 #${{ github.event.release.tag_name }}

      - name: Parse ConfigMap literals
        run: |
          CONFIG_LITERALS=""
          
          for pair in $(echo "${{ inputs.configmap_literals }}" | tr ',' '\n'); do
            CONFIG_LITERALS="$CONFIG_LITERALS --from-literal=$pair"
          done
          
          echo "config_literals=$CONFIG_LITERALS" >> "$GITHUB_ENV"

      - name: Parse Secret literals
        run: |
          SECRET_LITERALS=""
          
          for pair in $(echo "${{ secrets.secret_literals }}" | tr ',' '\n'); do
              $SECRET_LITERALS="$SECRET_LITERALS --from-literal=$pair"
          done
          
          echo "secret_literals=$$SECRET_LITERALS" >> "$GITHUB_ENV"

      - name: Deploy to Kubernetes
        run: |
          cat ~/.kube/config
          kubectl config view
          
          kubectl create configmap \
            ${{ inputs.configmap_name }} \
            ${{ env.config_literals }} \
            --dry-run=client -o yaml | kubectl apply -f -
          
          kubectl create secret generic \
            ${{ inputs.secret_name }} \
            ${{ env.config_literals }} \
            --dry-run=client -o yaml | kubectl apply -f -
          
          kubectl apply -f k8s/
          
          kubectl rollout restart deployment/$${{ inputs.deployment_name }}
